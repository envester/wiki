"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[899],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={},o="Openfunction",c={unversionedId:"Technique/OpenFunction",id:"Technique/OpenFunction",title:"Openfunction",description:"Logo",source:"@site/docs/Technique/OpenFunction.md",sourceDirName:"Technique",slug:"/Technique/OpenFunction",permalink:"/wiki/docs/Technique/OpenFunction",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Docusaurus",permalink:"/wiki/docs/Technique/IntroductioWiki"},next:{title:"gannt",permalink:"/wiki/docs/gannt"}},u={},l=[{value:"Architecture",id:"architecture",level:2},{value:"<em>Lien</em>",id:"lien",level:2},{value:"OpenFunction Features",id:"openfunction-features",level:2}],p={toc:l};function s(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"openfunction"},"Openfunction"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Logo",src:n(5510).Z,width:"835",height:"292"})),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"architecture",src:n(7550).Z,width:"3523",height:"1982"})),(0,a.kt)("h2",{id:"lien"},(0,a.kt)("em",{parentName:"h2"},"Lien")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"left"},"URL"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Platform"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://openfunction.dev/"},"https://openfunction.dev/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Meeting Calendar"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://kubesphere.io/contribution/"},"https://kubesphere.io/contribution/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Gtihub"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://github.com/OpenFunction/OpenFunction"},"https://github.com/OpenFunction/OpenFunction"))))),(0,a.kt)("h2",{id:"openfunction-features"},"OpenFunction Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Cloud agnostic and decoupled with cloud providers\u2019 BaaS"),(0,a.kt)("li",{parentName:"ul"},"Pluggable architecture that allows multiple function runtimes"),(0,a.kt)("li",{parentName:"ul"},"Support both sync and async functions"),(0,a.kt)("li",{parentName:"ul"},"Unique async functions support that can consume events directly from event sources"),(0,a.kt)("li",{parentName:"ul"},"Support generating OCI-Compliant container images directly from function source code."),(0,a.kt)("li",{parentName:"ul"},"Flexible autoscaling between 0 and N"),(0,a.kt)("li",{parentName:"ul"},"Advanced async function autoscaling based on event sources\u2019 specific metrics"),(0,a.kt)("li",{parentName:"ul"},"Simplified BaaS integration for both sync and async functions by introducing ",(0,a.kt)("a",{parentName:"li",href:"https://dapr.io/"},"Dapr")),(0,a.kt)("li",{parentName:"ul"},"Advanced function ingress & traffic management powered by (K8s Gateway API)","[https://gateway-api.sigs.k8s.io/]"),(0,a.kt)("li",{parentName:"ul"},"Flexible and easy-to-use events management framework")))}s.isMDXComponent=!0},7550:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/openfunction-0.5-architecture-6b9b1d48eba06550c70662a683d43518.png"},5510:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/openfunction_logo-1-61597d27f6db0b989807b55f1bd83eab.png"}}]);